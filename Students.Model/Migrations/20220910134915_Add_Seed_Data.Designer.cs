// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Students.Model.Models;

namespace Students.Model.Migrations
{
    [DbContext(typeof(StudentsContext))]
    [Migration("20220910134915_Add_Seed_Data")]
    partial class Add_Seed_Data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Students.Model.Models.Student", b =>
                {
                    b.Property<int>("Student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Student_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StudentClass_ID")
                        .HasColumnType("int");

                    b.Property<string>("Student_Address")
                        .HasColumnName("Student_Address")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("Student_BirthDate")
                        .HasColumnName("Student_BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Student_EmailAddress")
                        .HasColumnName("Student_EmailAddress")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Student_Name")
                        .HasColumnName("Student_Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Student_ID")
                        .HasName("PK_Student");

                    b.HasIndex("StudentClass_ID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Students.Model.Models.StudentClass", b =>
                {
                    b.Property<int>("StudentClass_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentClass_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentClass_Name")
                        .HasColumnName("StudentClass_Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("StudentClass_ID")
                        .HasName("PK_StudentClass");

                    b.ToTable("StudentClass");
                });

            modelBuilder.Entity("Students.Model.Models.StudentSubject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Student_ID")
                        .HasColumnName("Student_ID")
                        .HasColumnType("int");

                    b.Property<int>("Subject_ID")
                        .HasColumnName("Subject_ID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK_StudentSubject");

                    b.HasIndex("Student_ID");

                    b.HasIndex("Subject_ID");

                    b.ToTable("StudentSubject");
                });

            modelBuilder.Entity("Students.Model.Models.Subject", b =>
                {
                    b.Property<int>("Subject_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Subject_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Subject_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject_Name")
                        .HasColumnName("Subject_Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Subject_ID")
                        .HasName("PK_Subject");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Students.Model.Models.Student", b =>
                {
                    b.HasOne("Students.Model.Models.StudentClass", "StudentClass")
                        .WithMany("Students")
                        .HasForeignKey("StudentClass_ID")
                        .HasConstraintName("FK_Student_StudentClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Students.Model.Models.StudentSubject", b =>
                {
                    b.HasOne("Students.Model.Models.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("Student_ID")
                        .HasConstraintName("FK_StudentSubject_Student")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Students.Model.Models.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("Subject_ID")
                        .HasConstraintName("FK_StudentSubject_Subject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
